/*
 * Brave Data Insights API
 * Brave Data Insights is an API that delivers real-time insights for better risk and fraud decisions. Our API can obtains one or more insights based on data collected from the user's mobile devices or web applications.<br/><br><img src='https://developer.circulodecredito.com.mx/sites/default/files/2020-10/circulo_de_credito-apihub.png' height='40' width='220'/></p><br/>
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@circulodecredito.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.brave.dataevents.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Dataset object
 */
@Schema(description = "Dataset object")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-12-14T22:11:48.456525056Z[GMT]")

public class DatasetModel {
  @SerializedName("referenceNumber")
  private String referenceNumber = null;

  @SerializedName("createDate")
  private String createDate = null;

  @SerializedName("status")
  private String status = null;

  public DatasetModel referenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

   /**
   * The parameter which could be used to identify the dataset. We recommend using alphanumeric characters, dashes \&quot;-\&quot; and underscores \&quot;_\&quot; for this field.
   * @return referenceNumber
  **/
  @Schema(example = "web_123456789-xxxx", description = "The parameter which could be used to identify the dataset. We recommend using alphanumeric characters, dashes \"-\" and underscores \"_\" for this field.")
  public String getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
  }

  public DatasetModel createDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Creation date of dataset
   * @return createDate
  **/
  @Schema(example = "2023-06-02T21:50:53.000Z", description = "Creation date of dataset")
  public String getCreateDate() {
    return createDate;
  }

  public void setCreateDate(String createDate) {
    this.createDate = createDate;
  }

  public DatasetModel status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status of dataset
   * @return status
  **/
  @Schema(example = "Completed", description = "Status of dataset")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatasetModel datasetModel = (DatasetModel) o;
    return Objects.equals(this.referenceNumber, datasetModel.referenceNumber) &&
        Objects.equals(this.createDate, datasetModel.createDate) &&
        Objects.equals(this.status, datasetModel.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceNumber, createDate, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatasetModel {\n");
    
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
